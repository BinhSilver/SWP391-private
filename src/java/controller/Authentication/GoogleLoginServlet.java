/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package controller.Authentication;

// ===== IMPORT STATEMENTS =====
import java.io.IOException;                 // IO Exception
import jakarta.servlet.ServletException;    // Servlet Exception
import jakarta.servlet.annotation.WebServlet;       // WebServlet annotation
import jakarta.servlet.http.*;              // HTTP Servlet classes
import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl;  // Google OAuth URL builder

// ===== SERVLET CONFIGURATION =====
/**
 * GoogleLoginServlet - Servlet kh·ªüi t·∫°o qu√° tr√¨nh ƒëƒÉng nh·∫≠p Google OAuth
 * 
 * Ch·ª©c nƒÉng ch√≠nh:
 * - T·∫°o URL OAuth cho Google
 * - Redirect user ƒë·∫øn Google ƒë·ªÉ x√°c th·ª±c
 * - X·ª≠ l√Ω l·ªói OAuth
 * 
 * URL mapping: /login-google
 * 
 * @author Admin
 */
@WebServlet("/login-google")
public class GoogleLoginServlet extends HttpServlet {
    
    // ===== GOOGLE OAUTH CONSTANTS =====
    // Client ID t·ª´ Google Cloud Console
    private static final String CLIENT_ID = "1025289027596-qkbrdlnf5s31pjg2s7mkmdg0tj8s5c65.apps.googleusercontent.com";
    
    // URL callback sau khi Google x√°c th·ª±c xong
    private static final String REDIRECT_URI = "https://wasabii.id.vn/oauth2callback";
    
    // Quy·ªÅn truy c·∫≠p c·∫ßn thi·∫øt t·ª´ Google
    private static final String SCOPE = "openid email profile";

    // ===== GET METHOD - INITIATE GOOGLE OAUTH =====
    /**
     * X·ª≠ l√Ω GET request ƒë·ªÉ b·∫Øt ƒë·∫ßu qu√° tr√¨nh ƒëƒÉng nh·∫≠p Google
     * Quy tr√¨nh:
     * 1. T·∫°o URL OAuth v·ªõi Google API Client library
     * 2. Redirect user ƒë·∫øn Google ƒë·ªÉ x√°c th·ª±c
     * 3. X·ª≠ l√Ω l·ªói n·∫øu c√≥
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
            // ===== OAUTH FLOW INITIATION =====
            // B·∫Øt ƒë·∫ßu qu√° tr√¨nh OAuth v·ªõi Google
            System.out.println("üöÄ [GoogleLogin] B·∫Øt ƒë·∫ßu Google OAuth flow");
            
            // ===== CREATE OAUTH URL =====
            // S·ª≠ d·ª•ng Google API Client library ƒë·ªÉ t·∫°o URL OAuth
            String url = new GoogleAuthorizationCodeRequestUrl(
                    CLIENT_ID,
                    REDIRECT_URI,
                    java.util.Arrays.asList(SCOPE.split(" "))
            ).build();

            // ===== REDIRECT TO GOOGLE =====
            // Chuy·ªÉn h∆∞·ªõng user ƒë·∫øn Google ƒë·ªÉ x√°c th·ª±c
            System.out.println("üîó [GoogleLogin] Redirecting to Google OAuth URL: " + url);
            response.sendRedirect(url);
            
        } catch (Exception e) {
            // ===== ERROR HANDLING =====
            // X·ª≠ l√Ω l·ªói khi t·∫°o OAuth URL
            System.err.println("‚ùå [GoogleLogin] L·ªói khi t·∫°o Google OAuth URL: " + e.getMessage());
            e.printStackTrace();
            
            // ===== ERROR REDIRECT =====
            // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang login v·ªõi th√¥ng b√°o l·ªói
            response.sendRedirect(request.getContextPath() + "/login?error=google_oauth_error");
        }
    }
}